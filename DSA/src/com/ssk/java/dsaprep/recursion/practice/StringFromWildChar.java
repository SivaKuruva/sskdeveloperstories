package com.ssk.java.dsaprep.recursion.practice;

import java.util.ArrayList;
import java.util.List;

/*
    Strings From Wild Card
		You are given string s of length n, having m wildcard characters '?', where each wildcard character represents a single character. Write a program which returns a list of all possible distinct strings that can be generated by replacing each wildcard character in s with either '0' or '1'.
		Any string returned must not contain '?' characters, all must be replaced with either '0' or '1'.

		Example One
			{
			"s": "1?10"
			}
			Output:
				["1010", "1110"]

		Example Two
			{
			"s": "1?0?"
			}
			Output:
				["1000", "1001", "1100", "1101"]
				Input string has two '?' characters. Each one can be replaced with either '0' or '1' making the total number of distinct strings 22 = 4.

		Notes
		Order of strings in the output does not matter.

		Constraints:
		1 <= n <= 50
		0 <= m <= 17
*/
public class StringFromWildChar {
    public static void main(String[] args) {
        String s="1?0?";
        List<String> output=new ArrayList<>();
        new StringFromWildChar().getStringFromWildChar(s.toCharArray(),0,output);
        System.out.println(output);
    }

    public void getStringFromWildChar(char[] input,int index,List<String> output) {
        // base case
        if (index == input.length){
            output.add(new String(input));
            return;
        }

        //
        if(input[index]=='?'){
            input[index]='0';
            getStringFromWildChar(input,index+1,output);
            input[index]='1';
            getStringFromWildChar(input,index+1,output);
            input[index]='?';
        }else
            getStringFromWildChar(input,index+1,output);

    }
}
